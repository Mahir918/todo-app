{"version":3,"sources":["components/AppNavbar.js","actions/itemActions.js","actions/types.js","components/edit_todo.js","components/Todo_list.js","components/ItemModal.js","App.js","reducers/itemReducer.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["AppNavbar","state","isOpen","toggle","setState","Navbar","color","expand","className","Container","NavbarBrand","style","fontSize","href","class","aria-hidden","Component","getItems","dispatch","setItemsLoading","axios","get","then","res","type","payload","data","updateItem","id","obj","put","EditTodo","props","modal","onChange","e","target","name","value","onChangeTodoPriority","priority","onSubmit","preventDefault","_id","completed","match","params","console","log","history","push","date","Date","toLocaleDateString","this","catch","err","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","checked","Button","marginTop","block","connect","item","getItem","TodoList","onDeleteClick","deleteItem","items","map","key","onClick","bind","to","path","component","protoType","PropTypes","func","isRequired","object","delete","ItemModal","todo_priority","todo_completed","newItem","addItem","placeholder","post","App","initialState","loading","combineReducers","action","filter","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7a366f0f.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {\n    Navbar,\n    NavbarBrand,\n    Container,\n  } from 'reactstrap';\n\nclass AppNavbar extends Component {\n    state = {\n        isOpen : false\n    }\n\n    toggle = () => {\n        this.setState({isOpen : !this.state.isOpen})\n    }\n\n    render() {\n        return (\n            <div>\n              <Navbar color = \"dark\" expand = \"sm\"  className = \"mb-4\" >\n                <Container className = \"header\" >\n                \n                  <NavbarBrand style = {{color : \"white\", fontSize : \"1.5rem\"}} href =\"/\">Todolist &nbsp; <i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i></NavbarBrand>\n\n                  <NavbarBrand>\n                        <a className= \"text-decoration-none\" style = {{color : \"white\"}} href=\"https://github.com/sihmarradha\">Contact Developer &nbsp;\n                        <i  class=\"fa fa-github\" aria-hidden=\"true\"></i> </a>\n                  </NavbarBrand>          \n                </Container>     \n              </Navbar>\n                \n            </div>\n        )\n    }\n}\n\nexport default AppNavbar\n","import axios from 'axios'\n\nimport {GET_ITEMS , GET_ITEM,ADD_ITEM,DELETE_ITEM , ITEMS_LOADING,UPDATE_ITEM} from './types';\n\n\nexport const getItems = () => dispatch => {\n    dispatch(setItemsLoading());\n    axios.get('/api/items').then(res => \n        dispatch({\n            type : GET_ITEMS,\n            payload : res.data\n        }))\n}\n\n\nexport const getItem = (id) => dispatch => {\n    dispatch(setItemsLoading());\n    axios.get(`/api/items/${id}`).then(res => {\n        console.log(res.data.name)\n        dispatch({\n            type : GET_ITEM,\n            payload : res.data\n        })\n    }\n       )\n}\n\nexport const addItem = (item) => dispatch => {\n    axios.post('/api/items', item)\n        .then(res => {\n            console.log(res.data)\n            dispatch({\n                type : ADD_ITEM,\n                payload : res.data\n            })\n        }          \n    )\n}\n\nexport const deleteItem = (id) => dispatch => {\n   axios.delete(`/api/items/${id}`).then(res => {\n    console.log(\"Item Deleted :\", id)\n    dispatch({\n        type : DELETE_ITEM,\n        payload : id\n    })\n   })\n}\n\n\nexport const updateItem = (id, obj) => dispatch => {\n    axios.put(`/api/items/${id}`,obj).then(res => dispatch({\n        type : UPDATE_ITEM,\n        payload : res.data\n    })).then(res => {\n        dispatch(getItems());\n    })\n }\n\n\nexport const setItemsLoading = () => {\n    return{\n        type : ITEMS_LOADING,\n       \n    }\n}\n\n\n\n\n","export const GET_ITEMS  = \"GET_ITEMS\";\nexport const GET_ITEM  = \"GET_ITEM\";\nexport const ADD_ITEM  = \"ADD_ITEM\";\nexport const DELETE_ITEM  = \"DELETE_ITEM\";\nexport const UPDATE_ITEM  = \"UPDATE_ITEM\";\nexport const ITEMS_LOADING  = \"ITEMS_LOADING\";","import React , { Component } from 'react';\nimport axios from 'axios';\n\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input\n    \n  } from 'reactstrap';\n\n  import { connect } from 'react-redux'\n  import {getItem,getItems, updateItem} from '../actions/itemActions'\n\nclass EditTodo extends Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            modal : true,\n            _id : '',\n            name : '',\n            priority: '',\n            completed: false,\n            date : new Date().toLocaleDateString()\n        }\n    }\n\n    componentDidMount() {\n        axios.get('/api/items/'+this.props.match.params.id)\n            .then(res => {\n                console.log(\"Mounted data :\",res.data)\n                this.setState({  \n                    _id : res.data._id,               \n                    name: res.data.name,\n                    priority: res.data.priority,\n                    completed: res.data.completed\n                })\n\n                console.log(\"Single Item state :\",this.state)\n            })\n            .catch( err => console.log(err));\n    }\n\n    toggle = () => {\n        this.setState({\n            modal : !this.state.modal\n        })\n    }\n\n\n    onChange = (e) => {\n        this.setState({\n           [e.target.name] : e.target.value\n        })\n    }\n   \n\n    onChangeTodoPriority = (e) => {\n        this.setState({\n            priority: e.target.value\n        });\n    }\n\n    // onChangeTodoCompleted = (e) => {\n    //     this.setState({\n    //         completed: !this.state.completed\n    //     });\n    // }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const obj = {    \n            _id : this.state._id, \n            name: this.state.name,\n            priority: this.state.priority,\n            completed: this.state.completed\n        };\n        \n        this.props.updateItem(this.props.match.params.id,obj)\n        console.log(\"Data for update :\",obj)\n\n        this.toggle();\n        this.props.history.push('/');\n      \n    }\n\n    render() {\n        return (\n            <div>\n                <Modal isOpen = {this.state.modal}\n                toggle = {this.toggle}\n                >\n\n                <ModalHeader toggle = {this.toggle}>\n                    Update Shopping List &nbsp; <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                </ModalHeader>\n                <ModalBody>\n                    <Form onSubmit = {this.onSubmit}>\n                        <FormGroup>\n                            <Label for = \"item\">Item</Label>\n                            <Input type = \"text\"\n                            className=\"form-control\"\n                            name = \"name\"\n                            id = \"item\"\n                            value = {this.state.name}\n                            onChange = {this.onChange}/>\n                            <br/>\n\n                            <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\"\n                                    type=\"radio\"\n                                    name=\"priority\"\n                                    id=\"priorityLow\"\n                                    value=\"Low\"\n                                    checked={this.state.priority === \"Low\"}\n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">Low</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\"\n                                    type=\"radio\"\n                                    name=\"priority\"\n                                    id=\"priorityMedium\"\n                                    value=\"Medium\"\n                                    checked={this.state.priority === \"Medium\"}\n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">Medium</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\"\n                                    type=\"radio\"\n                                    name=\"priority\"\n                                    id=\"priorityHigh\"\n                                    value=\"High\"\n                                    checked={this.state.priority === \"High\"}\n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">High</label>\n                        </div>\n\n\n                            <Button color = \"dark\"\n                            style = {{marginTop : \"2rem\"}} block>Update Item</Button>\n                           \n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                    \n                </Modal>\n            \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    item : state.item\n})\n\nexport default  connect(mapStateToProps, {getItem,getItems,updateItem})(EditTodo)","import React, { Component } from 'react'\nimport {Container} from 'reactstrap'\nimport {connect} from 'react-redux'\nimport {getItems, deleteItem, updateItem} from '../actions/itemActions'\nimport PropTypes from \"prop-types\"\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport EditTodo from './edit_todo'\nimport '../App.css'\n\n\nclass TodoList extends Component {\n  state = {\n    modal : false,\n    name : '',\n    priority: '',\n    completed: false\n  }\n\n  toggle = () => {\n      this.setState({\n          modal : !this.state.modal\n      })\n  }\n\n  onChange = (e) => {\n    this.setState({\n       [e.target.name] : e.target.value\n    })\n  }\n\n  onChangeTodoPriority = e => {\n    this.setState({ priority: e.target.value });\n  }\n\n  \n  componentDidMount(){\n    this.props.getItems();\n  }\n\n  onDeleteClick = (id)  => {\n    this.props.deleteItem(id);\n  }\n\n\n  render(){\n    const {items} = this.props.item;\n    return(\n      <Router>\n        <Container>\n\n            <table className=\"table table-striped\">\n            <thead>\n                <tr>\n                    <th>Remove</th>\n                    <th>Description</th>\n                    <th>Priority</th>\n                    <th>Edit</th>\n                   \n                </tr>\n            </thead>\n            <tbody>\n\n                {items.map(({_id,name, priority, completed}) => (\n\n                <tr  key = {_id}>\n                    <td className = \"remove-btn text-danger\"\n                    onClick = {this.onDeleteClick.bind(this,_id)}>\n                    <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\n                    </td>\n\n                    <td className = \"text-dark\">{name}</td>\n\n                    <td className = \"text-dark\">{priority}</td>\n\n                    \n                    <td className = \"text-primary\">\n                    <Link onClick = {this.toggle} to={\"/edit/\"+_id}><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                    </Link>\n                    <Route path='/edit/:id' component={EditTodo} />\n                    </td>\n\n                </tr>\n                ))}\n            </tbody>\n\n          </table>\n            \n        </Container>\n      </Router>\n\n    )\n  }                     \n}\n\nTodoList.protoType = {\n  getItems : PropTypes.func.isRequired,\n  item : PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps = (state) => ({\n  item : state.item\n})\n\nexport default connect(mapStateToProps, {getItems, deleteItem,updateItem})(TodoList)\n","import React, { Component } from 'react'\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    Container\n  } from 'reactstrap';\n  import { connect } from 'react-redux'\n  import {addItem} from '../actions/itemActions'\n\nclass ItemModal extends Component {\n    state = {\n        modal : false,\n        name : '',\n        todo_priority: '',\n        todo_completed: false\n        \n    }\n\n    toggle = () => {\n        this.setState({\n            modal : !this.state.modal\n        })\n    }\n\n    onChange = (e) => {\n        this.setState({\n           [e.target.name] : e.target.value\n        })\n    }\n\n    onChangeTodoPriority = e => {\n        this.setState({ todo_priority: e.target.value });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n\n        console.log('Form submitteed:');\n        \n        const newItem = {\n          \n            name: this.state.name,\n            priority: this.state.todo_priority,\n            completed: this.state.todo_completed\n        }\n\n        this.props.addItem(newItem)\n\n        this.toggle();\n    }\n    render() {\n        return (\n            <Container>\n                <Button \n                className = \"mb-2\"\n                color = \"dark\"\n                onClick = {this.toggle}>Add Item</Button>\n\n                <Modal isOpen = {this.state.modal}\n                toggle = {this.toggle}\n                >\n\n                <ModalHeader toggle = {this.toggle}>\n                    Add to Shopping List\n                </ModalHeader>\n                <ModalBody>\n                    <Form onSubmit = {this.onSubmit}>\n                        <FormGroup>\n                            <Label for = \"item\">Item</Label>\n                            <Input type = \"text\"\n                            name = \"name\"\n                            id = \"item\"\n                            placeholder = \"Add Item\"\n                            onChange = {this.onChange}/>\n                            <br/>\n\n                            <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\"\n                                    type=\"radio\"\n                                    name=\"priority\"\n                                    id=\"priorityLow\"\n                                    value=\"Low\"\n                                    checked={this.state.todo_priority === \"Low\"}\n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">Low</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\"\n                                    type=\"radio\"\n                                    name=\"priority\"\n                                    id=\"priorityMedium\"\n                                    value=\"Medium\"\n                                    checked={this.state.todo_priority === \"Medium\"}\n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">Medium</label>\n                        </div>\n                        <div className=\"form-check form-check-inline\">\n                            <input  className=\"form-check-input\"\n                                    type=\"radio\"\n                                    name=\"priority\"\n                                    id=\"priorityHigh\"\n                                    value=\"High\"\n                                    checked={this.state.todo_priority === \"High\"}\n                                    onChange={this.onChangeTodoPriority}\n                                    />\n                            <label className=\"form-check-label\">High</label>\n                        </div>\n\n\n                            <Button color = \"dark\"\n                            style = {{marginTop : \"2rem\"}} block>Add Item</Button>\n                           \n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                    \n                </Modal>\n            </Container>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n    item : state.item\n})\n\nexport default connect(mapStateToProps, {addItem})(ItemModal)\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport AppNavbar from './components/AppNavbar'\nimport Todolist from './components/Todo_list'\nimport {Container} from 'reactstrap'\nimport ItemModal from './components/ItemModal';\nimport './App.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n  return (\n \n      <Router>\n        <div className=\"App\">\n   \n                <AppNavbar/>\n                <Container>                 \n                  <ItemModal/>\n                  <Todolist/>\n                </Container>                \n        </div>     \n      </Router>    \n  );\n}\n\nexport default App;\n","import {GET_ITEMS,GET_ITEM,ADD_ITEM,DELETE_ITEM,UPDATE_ITEM, ITEMS_LOADING} from '../actions/types';\n\nconst initialState = {\n    items : [],\n    loading : false\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case GET_ITEMS :\n            return {\n                ...state,\n                items: action.payload,\n                loading : false\n            }\n\n        case GET_ITEM :\n            return {\n                ...state,\n                items :action.payload,\n                loading : false\n                }\n        case DELETE_ITEM :\n                return {\n                    ...state,\n                    items : state.items.filter(item => item._id !== action.payload)\n                }\n        case ADD_ITEM : \n            return {\n                ...state,\n                items : [action.payload, ...state.items]\n            }\n\n        case UPDATE_ITEM : \n            return {\n                ...state,\n                ...action.payload\n            }\n        \n        case ITEMS_LOADING : \n            return {\n                ...state,\n                loading : true\n            }\n            \n        \n\n        default : \n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport itemReducer from './itemReducer';\n\nexport default combineReducers({\n    item : itemReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n\nexport default store","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}